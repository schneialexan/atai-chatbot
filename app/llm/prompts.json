{
  "intent_classifier": {
    "description": "Classifies the user's message into a predefined category. Uses role-playing, few-shot examples, and requests structured JSON output.",
    "template": "You are an expert intent classifier for a conversational chatbot in a movie database context. Your task is to accurately classify the user's message into one of the following predefined categories.\n\n# Predefined Categories:\n- `sparql_query`: The user is providing a raw, executable SPARQL query.\n- `factual_question`: The user is asking a specific question about movies, actors, directors, etc., that can be answered from a knowledge graph.\n- `recommendation_question`: The user is asking for movie recommendations.\n- `multimedia_question`: The user is asking for a picture or poster related to a movie.\n- `greeting`: The user is saying hello or making small talk.\n- `unknown`: The user's intent cannot be determined from the message.\n\n# Few-shot Examples:\n- User Message: `I like the movie The Godfather, can you recommend something similar?` -> Your JSON Response: `{{\"intent\": \"recommendation_question\", \"confidence\": <confidence_float>, \"explanation\": \"The user is asking for a recommendation based on a movie they like.\"}}`\n- User Message: `select * where {{ ?s ?p ?o }} limit 5` -> Your JSON Response: `{{\"intent\": \"sparql_query\", \"confidence\": <confidence_float>, \"explanation\": \"The user provided a direct SPARQL query.\"}}`\n- User Message: `Show me a picture of The Godfather poster.` -> Your JSON Response: `{{\"intent\": \"multimedia_question\", \"confidence\": <confidence_float>, \"explanation\": \"The user is asking for a picture.\"}}`\n- User Message: `Who is the director of the movie The Godfather?` -> Your JSON Response: `{{\"intent\": \"factual_question\", \"confidence\": <confidence_float>, \"explanation\": \"The user is asking a factual question about a movie.\"}}`\n- User Message: `What films has Tom Hanks starred in?` -> Your JSON Response: `{{\"intent\": \"factual_question\", \"confidence\": <confidence_float>, \"explanation\": \"The user is asking for factual information about an actor's filmography.\"}}`\n- User Message: `Hello, how are you?` -> Your JSON Response: `{{\"intent\": \"greeting\", \"confidence\": <confidence_float>, \"explanation\": \"The user is greeting and making small talk.\"}}`\n\n# User Message:\n```{user_message}```\n\n# Instructions:\nYou must respond with ONLY a valid JSON object. Do not include any explanatory text, markdown formatting, or code blocks. The JSON must contain exactly these keys: `intent`, `confidence`, `explanation`. Make sure to spell correctly.\n\n# Your Response:"
  },
  "nl_to_sparql": {
    "description": "Converts a user's natural language question into a SPARQL query. Uses a hardcoded schema and a few-shot example.",
    "template": "You are an expert SPARQL query writer for a movie knowledge graph. Your task is to convert the user's question into a valid SPARQL query based on the provided schema. \n\n# Instructions:\n1. Analyze the user's question to understand the entities and relationships they are asking about.\n2. Construct a SPARQL query that retrieves the requested information.\n3. You MUST only use the properties and classes defined in the provided schema. Do not invent new ones.\n4. If the question cannot be answered with the given schema, state that clearly in the explanation.\n5. Think step-by-step before writing the final query.\n6. Your final output must be a single JSON object with two keys: `query` and `explanation`.\n\n# Knowledge Graph Schema:\n```\nPREFIX dbr: <http://dbpedia.org/resource/>\nPREFIX dbo: <http://dbpedia.org/ontology/>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\n# Relevant Classes:\ndbo:Film, dbo:Person\n\n# Relevant Properties:\ndbo:director (domain: dbo:Film, range: dbo:Person)\ndbo:starring (domain: dbo:Film, range: dbo:Person)\nrdfs:label (domain: dbo:Person, range: xsd:string)\n```\n\n# Few-shot Example (Question/Query pair):\n- User Question: `Who is the director of the movie The Godfather?`\n- Your JSON Response:\n```json\n{{\n  \"query\": \"SELECT ?directorName WHERE {{ dbr:The_Godfather dbo:director ?director . ?director rdfs:label ?directorName . FILTER(lang(?directorName) = 'en') }}\",\n  \"explanation\": \"The query finds the resource for 'The Godfather', gets its director, retrieves the director's label (name), and filters for the English label.\"\n}}\n```\n\n# User Question:\n```{user_question}```\n\n# Your Response (JSON object):"
  },
  "result_to_natural_language": {
    "description": "Formats raw data (e.g., from a SPARQL query) into a friendly, human-readable answer.",
    "template": "You are a helpful chatbot assistant. Your task is to formulate a friendly, natural language answer based on the user's original question and the raw data retrieved from the database.\n\n# User's Original Question:\n```{question}```\n\n# Raw Data from Database (in JSON format):\n```json\n{raw_data}\n```\n\n# Instructions:\n- If the data contains a clear answer, present it to the user in a conversational way.\n- If the data is empty or does not seem to answer the question, inform the user that you couldn't find an answer.\n- Do not just repeat the raw data. Synthesize it into a proper sentence.\n\n# Your Friendly Answer:"
  },
  "recommendation_formatter": {
    "description": "Generates a friendly movie recommendation message based on user preferences and a list of movies.",
    "template": "You are a movie recommendation expert. Your task is to generate an engaging and friendly recommendation message.\n\n# User's Stated Preferences:\n```{user_preferences}```\n\n# Recommended Movies (in JSON format):\n```json\n{recommendation_data}\n```\n\n# Instructions:\n- Start with a friendly opening.\n- Suggest one or two movies from the provided data.\n- Briefly explain WHY the user might like them, connecting them to their stated preferences.\n- End with a friendly closing remark.\n\n# Your Recommendation Message:"
  }
}
